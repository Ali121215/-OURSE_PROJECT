{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\IntelliJ\\\\Projects\\\\Restaurant\\\\Vietnamese_Restaurant\\\\frontend\\\\src\\\\components\\\\board\\\\board-manager.component.jsx\";\nimport React, { Component } from \"react\";\nimport authService from \"../../services/auth.service\";\nimport UserService from \"../../services/user.service\";\nexport default class BoardManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      currentUser: authService.getCurrentUser(),\n      content: ''\n    };\n    this.deleteUser = this.deleteUser.bind(this);\n  }\n\n  componentDidMount() {\n    UserService.getManagerBoard().then(response => {\n      this.setState({\n        users: response.data,\n        content: \"Manager\"\n      });\n    }, error => {\n      this.setState({\n        content: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n  }\n\n  updateUser(id) {\n    this.props.history.push(`/user/${id}`);\n  }\n\n  deleteUser(id) {\n    var result = window.confirm(\"Want to delete?\");\n\n    if (result) {\n      authService.deleteUser(id).then(res => {\n        this.setState({\n          users: this.state.users.filter(user => user.id !== id)\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.state.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), this.state.content === \"Manager\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" User Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" User Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" User Roles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" User Request Roles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.users.filter(user => this.state.currentUser.roles.includes(\"ROLE_ADMIN\") || !user.roles.map(role => role.name).includes(\"ROLE_ADMIN\")).map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", user.username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", user.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", user.roles.map(role => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: role.name\n                }, role.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 75\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", user.userRequest]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.updateUser(user.id),\n                  className: \"btn btn-success\",\n                  children: \"Update \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    marginLeft: \"10px\"\n                  },\n                  onClick: () => this.deleteUser(user.id),\n                  className: \"btn btn-danger\",\n                  children: \"Delete \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 46\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 39\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/IntelliJ/Projects/Restaurant/Vietnamese_Restaurant/frontend/src/components/board/board-manager.component.jsx"],"names":["React","Component","authService","UserService","BoardManager","constructor","props","state","users","currentUser","getCurrentUser","content","deleteUser","bind","componentDidMount","getManagerBoard","then","response","setState","data","error","message","toString","updateUser","id","history","push","result","window","confirm","res","filter","user","render","roles","includes","map","role","name","username","email","userRequest","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport authService from \"../../services/auth.service\";\r\n\r\nimport UserService from \"../../services/user.service\";\r\n\r\nexport default class BoardManager extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: [],\r\n      currentUser: authService.getCurrentUser(),\r\n      content:''\r\n    };\r\n\r\n    this.deleteUser = this.deleteUser.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getManagerBoard().then(\r\n      response => {\r\n        this.setState({\r\n          users: response.data,\r\n          content: \"Manager\"\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n    \r\n    \r\n  }\r\n\r\n  updateUser(id){\r\n    this.props.history.push(`/user/${id}`);\r\n  }\r\n\r\n  deleteUser(id){\r\n    var result = window.confirm(\"Want to delete?\");\r\n    if (result) {\r\n      authService.deleteUser(id).then(res => {\r\n        this.setState({users: this.state.users.filter(user => user.id !== id)});\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n\r\n          {this.state.content === \"Manager\" &&\r\n                 <div className = \"row\">\r\n                        <table className = \"table table-striped table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> User Name</th>\r\n                                    <th> User Email</th>\r\n                                    <th> User Roles</th>\r\n                                    <th> User Request Roles</th>\r\n                                    <th> Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.users.filter(user => this.state.currentUser.roles.includes(\"ROLE_ADMIN\") || !user.roles.map(role => role.name).includes(\"ROLE_ADMIN\")).map(user =>                       \r\n                                      <tr key = {user.id}>\r\n                                             <td> {user.username} </td>   \r\n                                             <td> {user.email}</td>\r\n                                             <td> {user.roles.map(role => <div key={role.id}>{role.name}</div>)}</td>\r\n                                             <td> {user.userRequest}</td>\r\n                                             <td>\r\n                                                <button onClick={ () => this.updateUser(user.id)} className=\"btn btn-success\">Update </button>                                            \r\n                                                <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteUser(user.id)} className=\"btn btn-danger\">Delete </button>\r\n                                             </td>\r\n                                      </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                 </div>\r\n            }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}