{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\IntelliJ\\\\Projects\\\\Restaurant\\\\Vietnamese_Restaurant\\\\frontend\\\\src\\\\components\\\\user\\\\requestRole.component.jsx\";\nimport React, { Component } from \"react\";\nimport AuthService from \"../../services/auth.service\";\nimport UserService from \"../../services/user.service\";\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = event => {\n      let roles = [...this.state.role, event.target.id];\n\n      if (this.state.role.includes(event.target.id)) {\n        roles = roles.filter(role => role !== event.target.id);\n      }\n\n      this.setState({\n        role: roles\n      });\n    };\n\n    this.state = {\n      user: AuthService.getCurrentUser(),\n      content: \"\",\n      role: [],\n      successful: false,\n      message: \"\",\n      listRole: [\"Manager\", \"Waiter\", \"Cashier\", \"Chef\"]\n    };\n    this.handleRequest = this.handleRequest.bind(this);\n  }\n\n  componentDidMount() {\n    UserService.getRequestRole().then(response => {\n      this.setState({\n        content: response.data\n      });\n    }, error => {\n      this.setState({\n        content: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n  }\n\n  handleRequest(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    if (this.checkBtn.context._errors.length === 0) {\n      let request = {\n        userRequest: this.state.role.join()\n      };\n      AuthService.userRequest(this.state.user.id, request).then(response => {\n        this.setState({\n          message: response.data.message,\n          successful: true\n        });\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron\",\n      children: this.state.content === \"Request Role\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          width: \"20rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleRequest,\n          ref: c => {\n            this.form = c;\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select roles:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-control custom-checkbox\",\n              children: this.state.listRole.map(role => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"custom-control custom-checkbox\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    className: \"custom-control-input\",\n                    id: role,\n                    value: role,\n                    onChange: this.handleCheckboxChange\n                  }, role, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: role,\n                    children: role\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-block\",\n              children: \"Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n              role: \"alert\",\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n            style: {\n              display: \"none\"\n            },\n            ref: c => {\n              this.checkBtn = c;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.state.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/IntelliJ/Projects/Restaurant/Vietnamese_Restaurant/frontend/src/components/user/requestRole.component.jsx"],"names":["React","Component","AuthService","UserService","BoardUser","constructor","props","handleCheckboxChange","event","roles","state","role","target","id","includes","filter","setState","user","getCurrentUser","content","successful","message","listRole","handleRequest","bind","componentDidMount","getRequestRole","then","response","data","error","toString","e","preventDefault","checkBtn","context","_errors","length","request","userRequest","join","resMessage","render","width","c","form","map","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nimport UserService from \"../../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: AuthService.getCurrentUser(),\r\n      content: \"\",\r\n      role: [],\r\n      successful: false,\r\n      message: \"\",\r\n      listRole: [\"Manager\", \"Waiter\", \"Cashier\", \"Chef\"]\r\n    };\r\n    this.handleRequest = this.handleRequest.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getRequestRole().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  handleCheckboxChange = (event) => {\r\n    let roles = [...this.state.role, event.target.id];\r\n    if (this.state.role.includes(event.target.id)) {\r\n      roles = roles.filter(role => role !== event.target.id);\r\n    } \r\n    this.setState({\r\n      role: roles\r\n    });\r\n  }\r\n\r\n  handleRequest(e){\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      let request = {userRequest: this.state.role.join()};\r\n\r\n        AuthService.userRequest(this.state.user.id, request).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n          error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n            this.setState({\r\n              successful: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n    }\r\n      \r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron\">\r\n          {this.state.content === \"Request Role\" ? (\r\n            <div className=\"card\" style={{width: \"20rem\"}}>\r\n              <h3>{this.state.content}</h3>\r\n              <Form\r\n                onSubmit={this.handleRequest}\r\n                ref={c => {\r\n                  this.form = c;\r\n                }}\r\n              >\r\n                    <div className=\"form-group\">\r\n                        <label>Select roles:</label>\r\n                        <div className=\"custom-control custom-checkbox\" >\r\n                            {   this.state.listRole.map(role => {\r\n                                    return (\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input type=\"checkbox\" className=\"custom-control-input\" key={role} id={role} value={role} onChange={this.handleCheckboxChange} />\r\n                                            <label className=\"custom-control-label\" htmlFor={role}>{role}</label>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <button className=\"btn btn-primary btn-block\">Request</button>\r\n                    </div>\r\n\r\n                {this.state.message && (\r\n                  <div className=\"form-group\">\r\n                    <div\r\n                      className={\r\n                        this.state.successful\r\n                          ? \"alert alert-success\"\r\n                          : \"alert alert-danger\"\r\n                      }\r\n                      role=\"alert\"\r\n                    >\r\n                      {this.state.message}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <CheckButton\r\n                  style={{ display: \"none\" }}\r\n                  ref={c => {\r\n                    this.checkBtn = c;\r\n                  }}\r\n                />\r\n              </Form>\r\n          </div>\r\n          ):(\r\n            <h3>{this.state.content}</h3>\r\n          )\r\n          }\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}