{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\IntelliJ\\\\Projects\\\\Restaurant\\\\Vietnamese_Restaurant\\\\frontend\\\\src\\\\components\\\\order\\\\createOrder.component.jsx\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport productService from \"../../services/product.service\";\nimport orderService from \"../../services/order.service\";\nimport authService from \"../../services/auth.service\";\nimport categoryService from \"../../services/category.service\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst vposition = value => {\n  if (value === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nexport default class createOrder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeCategory = event => {\n      let category_id = event.target.value;\n      productService.getAllProducts().then(response => {\n        this.setState({\n          listSearch: response.data.filter(product => product.categoryId === parseInt(category_id)),\n          showSearchProduct: true\n        });\n      });\n    };\n\n    this.onChangeQuantity = event => {\n      let quantities = [...this.state.quantities, event.target.value];\n      let product_ids = [...this.state.product_ids, event.target.id];\n\n      if (this.state.product_ids.includes(event.target.id)) {\n        let id = this.state.product_ids.indexOf(event.target.id);\n        quantities.splice(id, 1);\n        product_ids.splice(id, 1);\n      }\n\n      this.setState({\n        quantities: quantities,\n        product_ids: product_ids\n      });\n    };\n\n    this.handlePlaceOrder = this.handlePlaceOrder.bind(this);\n    this.onChangePosition = this.onChangePosition.bind(this);\n    this.onChangeNote = this.onChangeNote.bind(this);\n    this.onChangeCategory = this.onChangeCategory.bind(this);\n    this.addProduct = this.addProduct.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.state = {\n      user: authService.getCurrentUser(),\n      products: [],\n      product_ids: [],\n      quantities: [],\n      position: 0,\n      note: \"\",\n      successful: false,\n      message: \"\",\n      listCategories: [],\n      listProduct: [],\n      listSearch: [],\n      showSearchProduct: false,\n      showListProduct: false\n    };\n  }\n\n  componentDidMount() {\n    productService.getAllProducts().then(response => {\n      this.setState({\n        products: response.data,\n        content: \"New Order\"\n      });\n    }, error => {\n      this.setState({\n        content: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n    categoryService.getAllCategories().then(response => {\n      this.setState({\n        listCategories: response.data\n      });\n    }, error => {});\n  }\n\n  onChangePosition(e) {\n    this.setState({\n      position: e.target.value\n    });\n  } // onChangeNote(e) {\n  //   this.setState({\n  //     note: e.target.value\n  //   });\n  // }\n\n\n  addProduct(product) {\n    if (!this.state.listProduct.find(item => item.id === product.id)) {\n      this.state.listProduct.push(product);\n      this.setState({\n        showListProduct: true\n      });\n    }\n  }\n\n  deleteProduct(id) {\n    let list = this.state.listProduct.filter(product => product.id !== id);\n    this.setState({\n      listProduct: list\n    });\n    let index = this.state.product_ids.indexOf(id.toString());\n    this.state.product_ids.splice(index, 1);\n    this.state.quantities.splice(index, 1);\n  }\n\n  handlePlaceOrder(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      let orderRequest = {\n        user_id: this.state.user.id,\n        position: this.state.position,\n        note: this.state.note,\n        product_ids: this.state.product_ids,\n        quantities: this.state.quantities\n      };\n      var result = window.confirm(\"Want to place this order?\");\n\n      if (result) {\n        orderService.placeOrder(orderRequest).then(response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron\",\n      children: !this.state.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card col-8\",\n        style: {\n          marginTop: \"50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"New order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handlePlaceOrder,\n          ref: c => {\n            this.form = c;\n          },\n          children: [!this.state.successful && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-3 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"position\",\n                    children: \"Table \\u2116\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"position\",\n                    value: this.state.position,\n                    onChange: this.onChangePosition,\n                    validations: [required, vposition]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"parentId\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"form-control\",\n                    name: \"category\",\n                    onChange: this.onChangeCategory,\n                    children: this.state.listCategories.map(item => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: item.id,\n                        children: item.name\n                      }, item.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 25\n                  }, this), this.state.showSearchProduct && /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"table table-striped table-bordered\",\n                    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: this.state.listSearch.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [\" \", product.name, \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 255,\n                          columnNumber: 46\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            onClick: () => this.addProduct(product),\n                            className: \"btn btn-primary\",\n                            children: \"Add \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 257,\n                            columnNumber: 49\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 256,\n                          columnNumber: 46\n                        }, this)]\n                      }, product.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 39\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"quantities\",\n                  children: \"Products\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-striped table-bordered\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Quantities\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 278,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Actions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 21\n                  }, this), this.state.showListProduct && /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: this.state.listProduct.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: product.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 286,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          type: \"number\",\n                          className: \"form-control\",\n                          name: \"quantity\",\n                          id: product.id,\n                          onChange: this.onChangeQuantity\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 288,\n                          columnNumber: 25\n                        }, this), product.price, \"$ / 1 \", product.unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => this.deleteProduct(product.id),\n                          className: \"btn btn-danger\",\n                          children: \"Delete \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 297,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 25\n                      }, this)]\n                    }, product.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 23\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary btn-block\",\n                children: \"Place Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n              role: \"alert\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: this.state.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n            style: {\n              display: \"none\"\n            },\n            ref: c => {\n              this.checkBtn = c;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/IntelliJ/Projects/Restaurant/Vietnamese_Restaurant/frontend/src/components/order/createOrder.component.jsx"],"names":["React","Component","Form","Input","CheckButton","productService","orderService","authService","categoryService","required","value","vposition","createOrder","constructor","props","onChangeCategory","event","category_id","target","getAllProducts","then","response","setState","listSearch","data","filter","product","categoryId","parseInt","showSearchProduct","onChangeQuantity","quantities","state","product_ids","id","includes","indexOf","splice","handlePlaceOrder","bind","onChangePosition","onChangeNote","addProduct","deleteProduct","user","getCurrentUser","products","position","note","successful","message","listCategories","listProduct","showListProduct","componentDidMount","content","error","toString","getAllCategories","e","find","item","push","list","index","preventDefault","form","validateAll","checkBtn","context","_errors","length","orderRequest","user_id","result","window","confirm","placeOrder","resMessage","render","marginTop","c","map","name","price","unit","textAlign","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport productService from \"../../services/product.service\";\r\nimport orderService from \"../../services/order.service\";\r\nimport authService from \"../../services/auth.service\";\r\nimport categoryService from \"../../services/category.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vposition = value => {\r\n  if (value === null) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class createOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handlePlaceOrder = this.handlePlaceOrder.bind(this);\r\n    this.onChangePosition = this.onChangePosition.bind(this);\r\n    this.onChangeNote = this.onChangeNote.bind(this);\r\n    this.onChangeCategory = this.onChangeCategory.bind(this);\r\n    this.addProduct = this.addProduct.bind(this);\r\n    this.deleteProduct = this.deleteProduct.bind(this);\r\n\r\n    this.state = {\r\n      user: authService.getCurrentUser(),\r\n      products: [],\r\n      product_ids: [],\r\n      quantities: [],\r\n      position: 0,\r\n      note: \"\",\r\n      successful: false,\r\n      message: \"\",\r\n      listCategories: [],\r\n      listProduct: [],\r\n      listSearch: [],\r\n      showSearchProduct: false,\r\n      showListProduct: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    productService.getAllProducts().then(\r\n      response => {\r\n        this.setState({\r\n          products: response.data,\r\n          content: \"New Order\"\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n    categoryService.getAllCategories().then(\r\n      response => {\r\n        this.setState({\r\n          listCategories: response.data\r\n        });\r\n      },\r\n      error => {}\r\n    );\r\n  }\r\n\r\n  onChangePosition(e) {\r\n    this.setState({\r\n      position: e.target.value\r\n    });\r\n  }\r\n\r\n  // onChangeNote(e) {\r\n  //   this.setState({\r\n  //     note: e.target.value\r\n  //   });\r\n  // }\r\n\r\n  addProduct(product){\r\n    if (!this.state.listProduct.find(item => item.id === product.id)){\r\n      this.state.listProduct.push(product)\r\n      this.setState({showListProduct: true})\r\n    }\r\n  }\r\n\r\n  deleteProduct(id){\r\n    let list = this.state.listProduct.filter(product => product.id !== id);\r\n    this.setState({listProduct: list});\r\n\r\n    let index = this.state.product_ids.indexOf(id.toString());\r\n\r\n    this.state.product_ids.splice(index, 1);\r\n    this.state.quantities.splice(index, 1);\r\n  }\r\n\r\n  onChangeCategory = event => {\r\n    let category_id = event.target.value;\r\n    \r\n    productService.getAllProducts().then(\r\n      response => {\r\n        this.setState({listSearch: response.data.filter(product => product.categoryId === parseInt(category_id)),\r\n                      showSearchProduct: true});\r\n      });\r\n\r\n    \r\n  }\r\n\r\n  onChangeQuantity = event => {\r\n\r\n    let quantities = [...this.state.quantities, event.target.value];\r\n    let product_ids = [...this.state.product_ids, event.target.id];\r\n\r\n      if (this.state.product_ids.includes(event.target.id)){\r\n        let id = this.state.product_ids.indexOf(event.target.id);\r\n        quantities.splice(id, 1);\r\n        product_ids.splice(id,1);\r\n      }\r\n      this.setState({\r\n        quantities: quantities,\r\n        product_ids: product_ids\r\n      });\r\n  }\r\n\r\n  handlePlaceOrder(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n        let orderRequest = {user_id: this.state.user.id,\r\n                            position: this.state.position,\r\n                            note: this.state.note,\r\n                            product_ids: this.state.product_ids,\r\n                            quantities: this.state.quantities}\r\n\r\n        var result = window.confirm(\"Want to place this order?\");\r\n        if (result) {\r\n          orderService.placeOrder(orderRequest).then(\r\n            response => {\r\n              this.setState({\r\n                message: response.data.message,\r\n                successful: true\r\n              });\r\n            },\r\n            error => {\r\n              const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n\r\n              this.setState({\r\n                successful: false,\r\n                message: resMessage\r\n              });\r\n            }\r\n          );\r\n        }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron\" >\r\n        {!this.state.user ? (\r\n        <div style={{marginTop: \"50px\"}}>\r\n          <h3>Please Log In</h3>\r\n        </div>\r\n        ):(\r\n        <div className=\"card col-8\" style={{marginTop: \"50px\"}}>\r\n          <h3>New order</h3>\r\n          <Form\r\n            onSubmit={this.handlePlaceOrder}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n\r\n                  {/* <div className=\"col-sm\">\r\n                    <label htmlFor=\"note\">Note</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"note\"\r\n                      value={this.state.note}\r\n                      onChange={this.onChangeNote}\r\n                    />\r\n                  </div> */}\r\n              \r\n                <div className=\"row form-group\">\r\n\r\n                    <div className=\"col-sm-3 form-group\">\r\n                      <div className=\"row\">\r\n                        <label htmlFor=\"position\">Table №</label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          name=\"position\"\r\n                          value={this.state.position}\r\n                          onChange={this.onChangePosition}\r\n                          validations={[required, vposition]}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"row\">\r\n                        <label htmlFor=\"parentId\">Category</label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"category\"\r\n                          onChange={this.onChangeCategory}\r\n                        >\r\n                        {\r\n                          this.state.listCategories.map(item =>{\r\n                            return (\r\n                            <option key={item.id} value={item.id}>{item.name}</option>\r\n                            )\r\n                          })\r\n                        }\r\n                        </select>\r\n                    \r\n                    { this.state.showSearchProduct &&\r\n                      <table className = \"table table-striped table-bordered\">\r\n                            <tbody>\r\n                                {\r\n                                    this.state.listSearch.map(product =>                     \r\n                                      <tr key = {product.id}>\r\n                                             <td> {product.name} </td>                                    \r\n                                             <td>\r\n                                                <button type=\"button\" onClick={ () => this.addProduct(product)} className=\"btn btn-primary\">Add </button>                                                     \r\n                                             </td>\r\n                                      </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n                    </div>\r\n                      \r\n                  </div>\r\n\r\n                  \r\n\r\n                  \r\n                <div className=\"col-sm\">\r\n                  <label htmlFor=\"quantities\">Products</label>\r\n                  <table className = \"table table-striped table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                      <th>Name</th>\r\n                      <th>Quantities</th>\r\n                      <th>Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {this.state.showListProduct &&\r\n                    <tbody>\r\n                      {this.state.listProduct.map(product => \r\n                      <tr key = {product.id}>\r\n                        <td>{product.name}</td>\r\n                        <td>\r\n                        <Input\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          name=\"quantity\"\r\n                          id = {product.id}\r\n                          onChange={this.onChangeQuantity}\r\n                        />\r\n                        {product.price}$ / 1 {product.unit}</td>\r\n                        <td>\r\n                          <button onClick={ () => this.deleteProduct(product.id)} className=\"btn btn-danger\">Delete </button>    \r\n                        </td>\r\n                      </tr>\r\n                      )}\r\n                    </tbody>\r\n                    }\r\n                  </table>\r\n                </div>\r\n                \r\n\r\n                </div>\r\n              \r\n                <div className=\"form-group\">\r\n                  <button  className=\"btn btn-primary btn-block\">Place Order</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  <h4 style={{textAlign: \"center\"}}>{this.state.message}</h4>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}