{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\IntelliJ\\\\Projects\\\\Restaurant\\\\Vietnamese_Restaurant\\\\frontend\\\\src\\\\components\\\\user\\\\update.component.jsx\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport AuthService from \"../../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This is not a valid email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The username must be between 3 and 20 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The password must be between 6 and 40 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nexport default class Update extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = event => {\n      let roles = [...this.state.role, event.target.id];\n\n      if (this.state.role.includes(event.target.id)) {\n        roles = roles.filter(role => role !== event.target.id);\n      }\n\n      this.setState({\n        role: roles\n      }); //console.log(this.state.role);\n    };\n\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      id: parseInt(this.props.match.params.id),\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      currentRole: [],\n      userRequestRoles: \"\",\n      role: [],\n      successful: false,\n      message: \"\",\n      currentUser: AuthService.getCurrentUser(),\n      editInfo: false,\n      editRole: false,\n      listRole: [\"Admin\", \"Manager\", \"Waiter\", \"Cashier\", \"Chef\", \"User\"]\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n    if (!currentUser) this.setState({\n      redirect: \"/home\"\n    });\n    AuthService.getUserById(this.state.id).then(res => {\n      let userUpdate = res.data;\n      this.setState({\n        currentUser: currentUser,\n        userReady: true\n      });\n      this.setState({\n        username: userUpdate.username,\n        email: userUpdate.email,\n        currentRole: userUpdate.roles.map(role => role.name),\n        userRequestRoles: userUpdate.userRequest\n      });\n    });\n    this.setState({\n      editInfo: currentUser.roles.includes(\"ROLE_ADMIN\") || currentUser.id === this.state.id ? true : false\n    });\n    this.setState({\n      editRole: currentUser.roles.includes(\"ROLE_ADMIN\") || currentUser.roles.includes(\"ROLE_MANAGER\") ? true : false\n    });\n\n    if (!currentUser.roles.includes(\"ROLE_ADMIN\")) {\n      this.state.listRole.shift();\n    }\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleUpdate(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      let user = {\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        role: this.state.role\n      };\n\n      if (this.state.editInfo && this.state.editRole) {\n        AuthService.adminUpdateUser(this.state.id, user).then(response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        });\n      } else if (this.state.editRole) {\n        AuthService.managerUpdateUser(this.state.id, user).then(response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        });\n      } else {\n        AuthService.userUpdateUser(this.state.id, user).then(response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        });\n      }\n\n      if (this.state.currentUser.id === this.state.id) {\n        AuthService.logout();\n        this.props.history.push('/login');\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n          alt: \"profile-img\",\n          className: \"profile-img-card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleUpdate,\n          ref: c => {\n            this.form = c;\n          },\n          children: [!this.state.successful && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [this.state.editInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"username\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"username\",\n                  value: this.state.username,\n                  onChange: this.onChangeUsername,\n                  validations: [required, vusername]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"email\",\n                  value: this.state.email,\n                  onChange: this.onChangeEmail,\n                  validations: [required, email]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  className: \"form-control\",\n                  name: \"password\",\n                  value: this.state.password,\n                  onChange: this.onChangePassword,\n                  validations: [required, vpassword]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), !this.state.editInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"User:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this), \" \", this.state.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 23\n                }, this), \" \", this.state.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Current Roles:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), \" \", this.state.currentRole.map(role => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 55\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), this.state.editRole && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [this.state.userRequestRoles !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"User Request Roles:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this), \" \", this.state.userRequestRoles]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Select roles:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-control custom-checkbox\",\n                children: this.state.listRole.map(role => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"custom-control custom-checkbox\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      className: \"custom-control-input\",\n                      id: role,\n                      value: role,\n                      onChange: this.handleCheckboxChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"custom-control-label\",\n                      htmlFor: role,\n                      children: role\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 37\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary btn-block\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n              role: \"alert\",\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n            style: {\n              display: \"none\"\n            },\n            ref: c => {\n              this.checkBtn = c;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/IntelliJ/Projects/Restaurant/Vietnamese_Restaurant/frontend/src/components/user/update.component.jsx"],"names":["React","Component","Form","Input","CheckButton","isEmail","AuthService","required","value","email","vusername","length","vpassword","Update","constructor","props","handleCheckboxChange","event","roles","state","role","target","id","includes","filter","setState","handleUpdate","bind","onChangeUsername","onChangeEmail","onChangePassword","parseInt","match","params","username","password","currentRole","userRequestRoles","successful","message","currentUser","getCurrentUser","editInfo","editRole","listRole","componentDidMount","redirect","getUserById","then","res","userUpdate","data","userReady","map","name","userRequest","shift","e","preventDefault","form","validateAll","checkBtn","context","_errors","user","adminUpdateUser","response","error","resMessage","toString","managerUpdateUser","userUpdateUser","logout","history","push","render","c","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Update extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n        id: parseInt(this.props.match.params.id),\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      currentRole:[],\r\n      userRequestRoles: \"\",\r\n      role: [],\r\n      successful: false,\r\n      message: \"\",\r\n      currentUser: AuthService.getCurrentUser(),\r\n      editInfo: false,\r\n      editRole: false,\r\n      listRole: [\"Admin\", \"Manager\", \"Waiter\", \"Cashier\", \"Chef\", \"User\"]\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    if (!currentUser) this.setState({ redirect: \"/home\" });\r\n    AuthService.getUserById(this.state.id).then(res =>{\r\n        let userUpdate = res.data;\r\n        this.setState({ currentUser: currentUser, userReady: true })\r\n\r\n        this.setState({username: userUpdate.username,\r\n                        email: userUpdate.email,\r\n                        currentRole: userUpdate.roles.map(role => role.name),\r\n                        userRequestRoles: userUpdate.userRequest\r\n                      })\r\n    })\r\n    this.setState({editInfo: (currentUser.roles.includes(\"ROLE_ADMIN\") || (currentUser.id === this.state.id))? true:false});\r\n    this.setState({editRole: (currentUser.roles.includes(\"ROLE_ADMIN\") || (currentUser.roles.includes(\"ROLE_MANAGER\")))? true:false});\r\n    if (!currentUser.roles.includes(\"ROLE_ADMIN\")) {this.state.listRole.shift()}\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleCheckboxChange = (event) => {\r\n      let roles = [...this.state.role, event.target.id];\r\n      if (this.state.role.includes(event.target.id)) {\r\n        roles = roles.filter(role => role !== event.target.id);\r\n      } \r\n      this.setState({\r\n        role: roles\r\n      });\r\n    //console.log(this.state.role);\r\n  }\r\n\r\n  handleUpdate(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      let user = {username: this.state.username,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        role: this.state.role}\r\n      if (this.state.editInfo && this.state.editRole) {\r\n        AuthService.adminUpdateUser(this.state.id, user).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n          error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n            this.setState({\r\n              successful: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      } else if (this.state.editRole){\r\n        AuthService.managerUpdateUser(this.state.id, user).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n          error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n            this.setState({\r\n              successful: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      } else {\r\n        AuthService.userUpdateUser(this.state.id, user).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n          error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n            this.setState({\r\n              successful: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n      if (this.state.currentUser.id === this.state.id) {\r\n        AuthService.logout();\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleUpdate}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div> \r\n                {this.state.editInfo &&\r\n                <div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"username\"\r\n                      value={this.state.username}\r\n                      onChange={this.onChangeUsername}\r\n                      validations={[required, vusername]}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeEmail}\r\n                      validations={[required, email]}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      name=\"password\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                      validations={[required, vpassword]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                }\r\n\r\n                {!this.state.editInfo && \r\n                  <div>\r\n                    <p>\r\n                      <strong>User:</strong>{\" \"}\r\n                      {this.state.username}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Email:</strong>{\" \"}\r\n                      {this.state.email}\r\n                    </p>    \r\n                  </div>\r\n                }\r\n                <p>\r\n                  <strong>Current Roles:</strong>{\" \"}\r\n                  {this.state.currentRole.map(role => <div>{role}</div>)}\r\n                </p>\r\n                {this.state.editRole &&\r\n                <div className=\"form-group\">\r\n                  {this.state.userRequestRoles !== null &&\r\n                  <p>\r\n                    <strong>User Request Roles:</strong>{\" \"}\r\n                    {this.state.userRequestRoles}\r\n                  </p>\r\n                  }\r\n                    <label>Select roles:</label>\r\n                    <div className=\"custom-control custom-checkbox\" >\r\n                        {   this.state.listRole.map(role => {\r\n                                return (\r\n                                    <div className=\"custom-control custom-checkbox\">\r\n                                        <input type=\"checkbox\" className=\"custom-control-input\" id={role} value={role} onChange={this.handleCheckboxChange} />\r\n                                        <label className=\"custom-control-label\" htmlFor={role}>{role}</label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                }\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Update</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}