{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\IntelliJ\\\\Projects\\\\Restaurant\\\\Vietnamese_Restaurant\\\\frontend\\\\src\\\\components\\\\board\\\\board-waiter.component.jsx\";\nimport React, { Component } from \"react\";\nimport userService from \"../../services/user.service\";\nimport UserService from \"../../services/user.service\";\nexport default class BoardWaiter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],\n      content: ''\n    };\n  }\n\n  componentDidMount() {\n    UserService.getWaiterBoard().then(response => {\n      this.setState({\n        orders: response.data,\n        content: \"Waiter\"\n      });\n    }, error => {\n      this.setState({\n        content: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n  }\n\n  servedOrder(id) {\n    var result = window.confirm(\"Is this dish served?\");\n\n    if (result) {\n      userService.servedOrder(id);\n      window.location.reload();\n    }\n  }\n\n  placeOrder() {\n    this.props.history.push('/order/add');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.state.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), this.state.content === \"Waiter\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          width: \"50rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.placeOrder(),\n          className: \"btn btn-primary\",\n          children: \"New order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Table\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Created On\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Cooked At\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.order.position, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.order.createdOn]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.order.updatedOn]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.product.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.quantity, \" \", order.product.unit]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.servedOrder(order.order.id),\n                  className: \"btn btn-success\",\n                  children: \"Served \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 43\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this)]\n            }, order.order.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/IntelliJ/Projects/Restaurant/Vietnamese_Restaurant/frontend/src/components/board/board-waiter.component.jsx"],"names":["React","Component","userService","UserService","BoardWaiter","constructor","props","state","orders","content","componentDidMount","getWaiterBoard","then","response","setState","data","error","message","toString","servedOrder","id","result","window","confirm","location","reload","placeOrder","history","push","render","width","map","order","position","createdOn","updatedOn","product","name","quantity","unit"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,eAAe,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AACjDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,OAAO,EAAC;AAFG,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,WAAW,CAACQ,cAAZ,GAA6BC,IAA7B,CACEC,QAAQ,IAAI;AACV,WAAKC,QAAL,CAAc;AACZN,QAAAA,MAAM,EAAEK,QAAQ,CAACE,IADL;AAEZN,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KANH,EAOEO,KAAK,IAAI;AACP,WAAKF,QAAL,CAAc;AACZL,QAAAA,OAAO,EACJO,KAAK,CAACH,QAAN,IACCG,KAAK,CAACH,QAAN,CAAeE,IADhB,IAECC,KAAK,CAACH,QAAN,CAAeE,IAAf,CAAoBE,OAFtB,IAGAD,KAAK,CAACC,OAHN,IAIAD,KAAK,CAACE,QAAN;AANU,OAAd;AAQD,KAhBH;AAoBD;;AAEDC,EAAAA,WAAW,CAACC,EAAD,EAAI;AACb,QAAIC,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAe,sBAAf,CAAb;;AACA,QAAIF,MAAJ,EAAY;AACZnB,MAAAA,WAAW,CAACiB,WAAZ,CAAwBC,EAAxB;AACAE,MAAAA,MAAM,CAACE,QAAP,CAAgBC,MAAhB;AACC;AACF;;AAEDC,EAAAA,UAAU,GAAE;AACV,SAAKpB,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA,kBAAK,KAAKtB,KAAL,CAAWE;AAAhB;AAAA;AAAA;AAAA;AAAA,cADJ,EAGK,KAAKF,KAAL,CAAWE,OAAX,KAAuB,QAAvB,iBACG;AAAK,QAAA,SAAS,EAAG,MAAjB;AAAwB,QAAA,KAAK,EAAE;AAACqB,UAAAA,KAAK,EAAE;AAAR,SAA/B;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAG,MAAM,KAAKJ,UAAL,EAAxB;AAA2C,UAAA,SAAS,EAAC,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAO,UAAA,SAAS,EAAG,oCAAnB;AAAA,kCACI;AAAA,mCACI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAWI;AAAA,sBAEQ,KAAKnB,KAAL,CAAWC,MAAX,CAAkBuB,GAAlB,CAAsBC,KAAK,iBACzB;AAAA,sCACQ;AAAA,gCAAMA,KAAK,CAACA,KAAN,CAAYC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADR,eAEQ;AAAA,gCAAMD,KAAK,CAACA,KAAN,CAAYE,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFR,eAGQ;AAAA,gCAAMF,KAAK,CAACA,KAAN,CAAYG,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHR,eAIQ;AAAA,gCAAMH,KAAK,CAACI,OAAN,CAAcC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJR,eAKQ;AAAA,gCAAML,KAAK,CAACM,QAAZ,OAAuBN,KAAK,CAACI,OAAN,CAAcG,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA,sBALR,eAMQ;AAAA,uCACE;AAAQ,kBAAA,OAAO,EAAG,MAAM,KAAKpB,WAAL,CAAiBa,KAAK,CAACA,KAAN,CAAYZ,EAA7B,CAAxB;AAA0D,kBAAA,SAAS,EAAC,iBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBANR;AAAA,eAAWY,KAAK,CAACA,KAAN,CAAYZ,EAAvB;AAAA;AAAA;AAAA;AAAA,oBADF;AAFR;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJR;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwCD;;AAtFgD","sourcesContent":["import React, { Component } from \"react\";\r\nimport userService from \"../../services/user.service\";\r\n\r\nimport UserService from \"../../services/user.service\";\r\n\r\nexport default class BoardWaiter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      orders: [],\r\n      content:''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getWaiterBoard().then(\r\n      response => {\r\n        this.setState({\r\n          orders: response.data,\r\n          content: \"Waiter\"\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n    \r\n    \r\n  }\r\n\r\n  servedOrder(id){\r\n    var result = window.confirm(\"Is this dish served?\");\r\n    if (result) {\r\n    userService.servedOrder(id);\r\n    window.location.reload();\r\n    }\r\n  }\r\n\r\n  placeOrder(){\r\n    this.props.history.push('/order/add');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n\r\n          {this.state.content === \"Waiter\" &&\r\n              <div className = \"card\" style={{width: \"50rem\"}}>                    \r\n                  <button onClick={ () => this.placeOrder()} className=\"btn btn-primary\">New order</button> \r\n\r\n                  <table className = \"table table-striped table-bordered\">\r\n                      <thead>\r\n                          <tr>\r\n                              <th> Table</th>\r\n                              <th> Created On</th>\r\n                              <th> Cooked At</th>\r\n                              <th> Product</th>\r\n                              <th> Quantity</th>\r\n                              <th> Actions</th>\r\n                          </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          {\r\n                              this.state.orders.map(order =>                     \r\n                                <tr key = {order.order.id}>\r\n                                        <td> {order.order.position} </td>   \r\n                                        <td> {order.order.createdOn}</td>\r\n                                        <td> {order.order.updatedOn}</td>\r\n                                        <td> {order.product.name}</td>\r\n                                        <td> {order.quantity} {order.product.unit}</td>                                     \r\n                                        <td>\r\n                                          <button onClick={ () => this.servedOrder(order.order.id)} className=\"btn btn-success\">Served </button>                                                     \r\n                                        </td>\r\n                                </tr>\r\n                              )\r\n                          }\r\n                      </tbody>\r\n                  </table>\r\n              </div>\r\n            }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}