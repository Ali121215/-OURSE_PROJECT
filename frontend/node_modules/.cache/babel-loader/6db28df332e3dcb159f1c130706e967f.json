{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\IntelliJ\\\\Projects\\\\Restaurant\\\\Vietnamese_Restaurant\\\\frontend\\\\src\\\\components\\\\board\\\\board-user.component.jsx\";\nimport React, { Component } from \"react\";\nimport AuthService from \"../../services/auth.service\";\nimport userService from \"../../services/user.service\";\nimport UserService from \"../../services/user.service\";\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = event => {\n      let roles = [...this.state.role, event.target.id];\n\n      if (this.state.role.includes(event.target.id)) {\n        roles = roles.filter(role => role !== event.target.id);\n      }\n\n      this.setState({\n        role: roles\n      });\n    };\n\n    this.state = {\n      user: AuthService.getCurrentUser(),\n      content: \"\",\n      orders: [],\n      role: [],\n      successful: false,\n      message: \"\",\n      listRole: [\"Manager\", \"Waiter\", \"Cashier\", \"Chef\"]\n    };\n    this.handleRequest = this.handleRequest.bind(this);\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard(this.state.user.id).then(response => {\n      this.setState({\n        orders: response.data,\n        content: \"Your Orders\"\n      });\n    }, error => {\n      this.setState({\n        content: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n  }\n\n  requestCancel(id) {\n    var result = window.confirm(\"Do you want to cancel this order?\");\n\n    if (result) {\n      userService.requestCancel(id);\n      window.location.reload();\n    }\n  }\n\n  handleRequest(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    if (this.checkBtn.context._errors.length === 0) {\n      let request = {\n        userRequest: this.state.role.join()\n      };\n      AuthService.userRequest(this.state.user.id, request).then(response => {\n        this.setState({\n          message: response.data.message,\n          successful: true\n        });\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron\",\n      children: this.state.content === \"Your Orders\" ?\n      /*#__PURE__*/\n      //   <div className=\"card\" style={{width: \"20rem\"}}>\n      //     <h3>{this.state.content}</h3>\n      //     <Form\n      //       onSubmit={this.handleRequest}\n      //       ref={c => {\n      //         this.form = c;\n      //       }}\n      //     >\n      //           <div className=\"form-group\">\n      //               <label>Select roles:</label>\n      //               <div className=\"custom-control custom-checkbox\" >\n      //                   {   this.state.listRole.map(role => {\n      //                           return (\n      //                               <div className=\"custom-control custom-checkbox\">\n      //                                   <input type=\"checkbox\" className=\"custom-control-input\" key={role} id={role} value={role} onChange={this.handleCheckboxChange} />\n      //                                   <label className=\"custom-control-label\" htmlFor={role}>{role}</label>\n      //                               </div>\n      //                           )\n      //                       })\n      //                   }\n      //               </div>\n      //           </div>\n      //           <div className=\"form-group\">\n      //             <button className=\"btn btn-primary btn-block\">Request</button>\n      //           </div>\n      //       {this.state.message && (\n      //         <div className=\"form-group\">\n      //           <div\n      //             className={\n      //               this.state.successful\n      //                 ? \"alert alert-success\"\n      //                 : \"alert alert-danger\"\n      //             }\n      //             role=\"alert\"\n      //           >\n      //             {this.state.message}\n      //           </div>\n      //         </div>\n      //       )}\n      //       <CheckButton\n      //         style={{ display: \"none\" }}\n      //         ref={c => {\n      //           this.checkBtn = c;\n      //         }}\n      //       />\n      //     </Form>\n      // </div>\n      _jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Table\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Created On\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Update At\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Note\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Cancel?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.order.position, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.order.createdOn]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.order.updatedOn]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.product.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.quantity, \" \", order.product.unit]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.order.total, \"$\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.order.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.order.status === \"PLACED\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.requestCancel(order.order.id),\n                  className: \"btn btn-danger\",\n                  children: \"Cancel \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 46\n              }, this)]\n            }, order.order.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 39\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.state.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/IntelliJ/Projects/Restaurant/Vietnamese_Restaurant/frontend/src/components/board/board-user.component.jsx"],"names":["React","Component","AuthService","userService","UserService","BoardUser","constructor","props","handleCheckboxChange","event","roles","state","role","target","id","includes","filter","setState","user","getCurrentUser","content","orders","successful","message","listRole","handleRequest","bind","componentDidMount","getUserBoard","then","response","data","error","toString","requestCancel","result","window","confirm","location","reload","e","preventDefault","checkBtn","context","_errors","length","request","userRequest","join","resMessage","render","map","order","position","createdOn","updatedOn","product","name","quantity","unit","total","status"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,eAAe,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC/CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4CnBC,oBA5CmB,GA4CKC,KAAD,IAAW;AAChC,UAAIC,KAAK,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,IAAf,EAAqBH,KAAK,CAACI,MAAN,CAAaC,EAAlC,CAAZ;;AACA,UAAI,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,QAAhB,CAAyBN,KAAK,CAACI,MAAN,CAAaC,EAAtC,CAAJ,EAA+C;AAC7CJ,QAAAA,KAAK,GAAGA,KAAK,CAACM,MAAN,CAAaJ,IAAI,IAAIA,IAAI,KAAKH,KAAK,CAACI,MAAN,CAAaC,EAA3C,CAAR;AACD;;AACD,WAAKG,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAEF;AADM,OAAd;AAGD,KApDkB;;AAGjB,SAAKC,KAAL,GAAa;AACXO,MAAAA,IAAI,EAAEhB,WAAW,CAACiB,cAAZ,EADK;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,MAAM,EAAE,EAHG;AAIXT,MAAAA,IAAI,EAAE,EAJK;AAKXU,MAAAA,UAAU,EAAE,KALD;AAMXC,MAAAA,OAAO,EAAE,EANE;AAOXC,MAAAA,QAAQ,EAAE,CAAC,SAAD,EAAY,QAAZ,EAAsB,SAAtB,EAAiC,MAAjC;AAPC,KAAb;AASA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBvB,IAAAA,WAAW,CAACwB,YAAZ,CAAyB,KAAKjB,KAAL,CAAWO,IAAX,CAAgBJ,EAAzC,EAA6Ce,IAA7C,CACEC,QAAQ,IAAI;AACV,WAAKb,QAAL,CAAc;AACZI,QAAAA,MAAM,EAAES,QAAQ,CAACC,IADL;AAEZX,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KANH,EAOEY,KAAK,IAAI;AACP,WAAKf,QAAL,CAAc;AACZG,QAAAA,OAAO,EACJY,KAAK,CAACF,QAAN,IACCE,KAAK,CAACF,QAAN,CAAeC,IADhB,IAECC,KAAK,CAACF,QAAN,CAAeC,IAAf,CAAoBR,OAFtB,IAGAS,KAAK,CAACT,OAHN,IAIAS,KAAK,CAACC,QAAN;AANU,OAAd;AAQD,KAhBH;AAkBD;;AAEDC,EAAAA,aAAa,CAACpB,EAAD,EAAI;AACf,QAAIqB,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAe,mCAAf,CAAb;;AACA,QAAIF,MAAJ,EAAY;AACZhC,MAAAA,WAAW,CAAC+B,aAAZ,CAA0BpB,EAA1B;AACAsB,MAAAA,MAAM,CAACE,QAAP,CAAgBC,MAAhB;AACC;AACF;;AAYDd,EAAAA,aAAa,CAACe,CAAD,EAAG;AACdA,IAAAA,CAAC,CAACC,cAAF;AAEA,SAAKxB,QAAL,CAAc;AACZM,MAAAA,OAAO,EAAE,EADG;AAEZD,MAAAA,UAAU,EAAE;AAFA,KAAd;;AAKA,QAAI,KAAKoB,QAAL,CAAcC,OAAd,CAAsBC,OAAtB,CAA8BC,MAA9B,KAAyC,CAA7C,EAAgD;AAC9C,UAAIC,OAAO,GAAG;AAACC,QAAAA,WAAW,EAAE,KAAKpC,KAAL,CAAWC,IAAX,CAAgBoC,IAAhB;AAAd,OAAd;AAEE9C,MAAAA,WAAW,CAAC6C,WAAZ,CAAwB,KAAKpC,KAAL,CAAWO,IAAX,CAAgBJ,EAAxC,EAA4CgC,OAA5C,EAAqDjB,IAArD,CACAC,QAAQ,IAAI;AACV,aAAKb,QAAL,CAAc;AACZM,UAAAA,OAAO,EAAEO,QAAQ,CAACC,IAAT,CAAcR,OADX;AAEZD,UAAAA,UAAU,EAAE;AAFA,SAAd;AAID,OAND,EAOEU,KAAK,IAAI;AACT,cAAMiB,UAAU,GACbjB,KAAK,CAACF,QAAN,IACCE,KAAK,CAACF,QAAN,CAAeC,IADhB,IAECC,KAAK,CAACF,QAAN,CAAeC,IAAf,CAAoBR,OAFtB,IAGAS,KAAK,CAACT,OAHN,IAIAS,KAAK,CAACC,QAAN,EALF;AAOE,aAAKhB,QAAL,CAAc;AACZK,UAAAA,UAAU,EAAE,KADA;AAEZC,UAAAA,OAAO,EAAE0B;AAFG,SAAd;AAID,OAnBH;AAqBH;AAEF;;AAGDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACK,KAAKvC,KAAL,CAAWS,OAAX,KAAuB,aAAvB;AAAA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACS;AAAA,oBAAK,KAAKT,KAAL,CAAWS;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADT,eAEc;AAAO,UAAA,SAAS,EAAG,oCAAnB;AAAA,kCACI;AAAA,mCACI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAcI;AAAA,sBAEQ,KAAKT,KAAL,CAAWU,MAAX,CAAkB8B,GAAlB,CAAsBC,KAAK,iBACzB;AAAA,sCACO;AAAA,gCAAMA,KAAK,CAACA,KAAN,CAAYC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADP,eAEO;AAAA,gCAAMD,KAAK,CAACA,KAAN,CAAYE,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFP,eAGO;AAAA,gCAAMF,KAAK,CAACA,KAAN,CAAYG,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHP,eAIO;AAAA,gCAAMH,KAAK,CAACI,OAAN,CAAcC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJP,eAKO;AAAA,gCAAML,KAAK,CAACM,QAAZ,OAAuBN,KAAK,CAACI,OAAN,CAAcG,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA,sBALP,eAMO;AAAA,gCAAMP,KAAK,CAACA,KAAN,CAAYQ,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,sBANP,eAOO;AAAA,gCAAMR,KAAK,CAACA,KAAN,CAAYS,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPP,eAQO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARP,eASO;AAAA,0BACCT,KAAK,CAACA,KAAN,CAAYS,MAAZ,KAAuB,QAAvB,iBACE;AAAQ,kBAAA,OAAO,EAAG,MAAM,KAAK3B,aAAL,CAAmBkB,KAAK,CAACA,KAAN,CAAYtC,EAA/B,CAAxB;AAA4D,kBAAA,SAAS,EAAC,gBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA,sBATP;AAAA,eAAWsC,KAAK,CAACA,KAAN,CAAYtC,EAAvB;AAAA;AAAA;AAAA;AAAA,oBADF;AAFR;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFd;AAAA;AAAA;AAAA;AAAA;AAAA,cAlDC,gBA2FC;AAAA,kBAAK,KAAKH,KAAL,CAAWS;AAAhB;AAAA;AAAA;AAAA;AAAA;AA5FN;AAAA;AAAA;AAAA;AAAA,YADF;AAkGD;;AA/L8C","sourcesContent":["import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport userService from \"../../services/user.service\";\r\n\r\nimport UserService from \"../../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: AuthService.getCurrentUser(),\r\n      content: \"\",\r\n      orders: [],\r\n      role: [],\r\n      successful: false,\r\n      message: \"\",\r\n      listRole: [\"Manager\", \"Waiter\", \"Cashier\", \"Chef\"]\r\n    };\r\n    this.handleRequest = this.handleRequest.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard(this.state.user.id).then(\r\n      response => {\r\n        this.setState({\r\n          orders: response.data,\r\n          content: \"Your Orders\"\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  requestCancel(id){\r\n    var result = window.confirm(\"Do you want to cancel this order?\");\r\n    if (result) {\r\n    userService.requestCancel(id);\r\n    window.location.reload();\r\n    }\r\n  }\r\n\r\n  handleCheckboxChange = (event) => {\r\n    let roles = [...this.state.role, event.target.id];\r\n    if (this.state.role.includes(event.target.id)) {\r\n      roles = roles.filter(role => role !== event.target.id);\r\n    } \r\n    this.setState({\r\n      role: roles\r\n    });\r\n  }\r\n\r\n  handleRequest(e){\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      let request = {userRequest: this.state.role.join()};\r\n\r\n        AuthService.userRequest(this.state.user.id, request).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n          error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n            this.setState({\r\n              successful: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n    }\r\n      \r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron\">\r\n          {this.state.content === \"Your Orders\" ? (\r\n          //   <div className=\"card\" style={{width: \"20rem\"}}>\r\n          //     <h3>{this.state.content}</h3>\r\n          //     <Form\r\n          //       onSubmit={this.handleRequest}\r\n          //       ref={c => {\r\n          //         this.form = c;\r\n          //       }}\r\n          //     >\r\n          //           <div className=\"form-group\">\r\n          //               <label>Select roles:</label>\r\n          //               <div className=\"custom-control custom-checkbox\" >\r\n          //                   {   this.state.listRole.map(role => {\r\n          //                           return (\r\n          //                               <div className=\"custom-control custom-checkbox\">\r\n          //                                   <input type=\"checkbox\" className=\"custom-control-input\" key={role} id={role} value={role} onChange={this.handleCheckboxChange} />\r\n          //                                   <label className=\"custom-control-label\" htmlFor={role}>{role}</label>\r\n          //                               </div>\r\n          //                           )\r\n          //                       })\r\n          //                   }\r\n          //               </div>\r\n          //           </div>\r\n\r\n          //           <div className=\"form-group\">\r\n          //             <button className=\"btn btn-primary btn-block\">Request</button>\r\n          //           </div>\r\n\r\n          //       {this.state.message && (\r\n          //         <div className=\"form-group\">\r\n          //           <div\r\n          //             className={\r\n          //               this.state.successful\r\n          //                 ? \"alert alert-success\"\r\n          //                 : \"alert alert-danger\"\r\n          //             }\r\n          //             role=\"alert\"\r\n          //           >\r\n          //             {this.state.message}\r\n          //           </div>\r\n          //         </div>\r\n          //       )}\r\n          //       <CheckButton\r\n          //         style={{ display: \"none\" }}\r\n          //         ref={c => {\r\n          //           this.checkBtn = c;\r\n          //         }}\r\n          //       />\r\n          //     </Form>\r\n          // </div>\r\n          <div className=\"card\">\r\n                   <h3>{this.state.content}</h3>\r\n                        <table className = \"table table-striped table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> Table</th>\r\n                                    <th> Created On</th>\r\n                                    <th> Update At</th>\r\n                                    <th> Product</th>\r\n                                    <th> Quantity</th>\r\n                                    <th> Total</th>\r\n                                    <th> Status</th>\r\n                                    <th> Note</th>\r\n                                    <th> Cancel?</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.orders.map(order =>                     \r\n                                      <tr key = {order.order.id}>\r\n                                             <td> {order.order.position} </td>   \r\n                                             <td> {order.order.createdOn}</td>\r\n                                             <td> {order.order.updatedOn}</td>\r\n                                             <td> {order.product.name}</td>\r\n                                             <td> {order.quantity} {order.product.unit}</td>  \r\n                                             <td> {order.order.total}$</td>\r\n                                             <td> {order.order.status}</td>   \r\n                                             <td> {}</td>\r\n                                             <td>\r\n                                             {order.order.status === \"PLACED\" &&\r\n                                                <button onClick={ () => this.requestCancel(order.order.id)} className=\"btn btn-danger\">Cancel </button> \r\n                                              }                                                    \r\n                                             </td>                                                             \r\n                                      </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    \r\n                 </div>\r\n          ):(\r\n            <h3>{this.state.content}</h3>\r\n          )\r\n          }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}