{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\IntelliJ\\\\Projects\\\\Restaurant\\\\Vietnamese_Restaurant\\\\frontend\\\\src\\\\components\\\\category\\\\new-category.component.jsx\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport CategoryService from \"../../services/category.service\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst vname = value => {\n  if (value.length < 3) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The name must be longer than 3 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nexport default class NewCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCategory = this.handleCategory.bind(this);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeParent = this.onChangeParent.bind(this);\n    this.state = {\n      name: \"\",\n      parentId: 0,\n      successful: false,\n      message: \"\",\n      listCategories: []\n    };\n  }\n\n  componentDidMount() {\n    CategoryService.getListParent(-1).then(response => {\n      this.setState({\n        listCategories: response.data\n      });\n    }, error => {});\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeParent(e) {\n    this.setState({\n      parentId: e.target.value\n    });\n  }\n\n  handleCategory(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      let categoryRequest = {\n        name: this.state.name,\n        parentId: this.state.parentId\n      };\n      CategoryService.addNewCategory(categoryRequest).then(response => {\n        this.setState({\n          message: response.data.message,\n          successful: true\n        });\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-container\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleCategory,\n          ref: c => {\n            this.form = c;\n          },\n          children: [!this.state.successful && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Category Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"name\",\n                value: this.state.name,\n                onChange: this.onChangeName,\n                validations: [required, vname]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"parentId\",\n                children: \"Parent Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                name: \"parentId\",\n                value: this.state.parentId,\n                onChange: this.onChangeParent,\n                children: this.state.listCategories.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item.id,\n                    children: item.name\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary btn-block\",\n                children: \"Add New Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n              role: \"alert\",\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n            style: {\n              display: \"none\"\n            },\n            ref: c => {\n              this.checkBtn = c;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/IntelliJ/Projects/Restaurant/Vietnamese_Restaurant/frontend/src/components/category/new-category.component.jsx"],"names":["React","Component","Form","Input","CheckButton","CategoryService","required","value","vname","length","NewCategory","constructor","props","handleCategory","bind","onChangeName","onChangeParent","state","name","parentId","successful","message","listCategories","componentDidMount","getListParent","then","response","setState","data","error","e","target","preventDefault","form","validateAll","checkBtn","context","_errors","categoryRequest","addNewCategory","resMessage","toString","render","c","map","item","id","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport CategoryService from \"../../services/category.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vname = value => {\r\n  if (value.length < 3) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The name must be longer than 3 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class NewCategory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleCategory = this.handleCategory.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeParent = this.onChangeParent.bind(this);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      parentId: 0,\r\n      successful: false,\r\n      message: \"\",\r\n      listCategories: []\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    CategoryService.getListParent(-1).then(\r\n      response => {\r\n        this.setState({\r\n          listCategories: response.data\r\n        });\r\n      },\r\n      error => {}\r\n    );\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeParent(e) {\r\n    this.setState({\r\n      parentId: e.target.value\r\n    });\r\n  }\r\n\r\n  handleCategory(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      let categoryRequest = {\r\n        name: this.state.name,\r\n        parentId: this.state.parentId\r\n      };\r\n\r\n      CategoryService.addNewCategory(\r\n        categoryRequest\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <Form\r\n            onSubmit={this.handleCategory}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Category Name</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    validations={[required, vname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"parentId\">Parent Category</label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"parentId\"\r\n                      value={this.state.parentId}\r\n                      onChange={this.onChangeParent}\r\n                    >\r\n                    {\r\n                      this.state.listCategories.map(item =>{\r\n                        return (\r\n                        <option key={item.id} value={item.id}>{item.name}</option>\r\n                        )\r\n                      })\r\n                    }\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Add New Category</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}