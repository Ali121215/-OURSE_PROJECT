{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nconst API_URL = 'http://localhost:8082/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getRequestRole() {\n    return axios.get(API_URL + 'user', {\n      headers: authHeader()\n    });\n  }\n\n  getUserBoard(id) {\n    return axios.get(API_URL + 'orderByUser/' + id, {\n      headers: authHeader()\n    });\n  }\n\n  requestCancel(id, order) {\n    return axios.put(API_URL + \"requestCancel/\" + id, order, {\n      headers: authHeader()\n    });\n  }\n\n  getWaiterBoard() {\n    return axios.get(API_URL + 'waiter', {\n      headers: authHeader()\n    });\n  }\n\n  servedOrder(id) {\n    return axios.put(API_URL + \"served/\" + id, id, {\n      headers: authHeader()\n    });\n  }\n\n  getCashierBoard() {\n    return axios.get(API_URL + 'cashier', {\n      headers: authHeader()\n    });\n  }\n\n  paidOrder(id) {\n    return axios.put(API_URL + \"paid/\" + id, id, {\n      headers: authHeader()\n    });\n  }\n\n  getChefBoard() {\n    return axios.get(API_URL + 'chef', {\n      headers: authHeader()\n    });\n  }\n\n  cookedOrder(id) {\n    return axios.put(API_URL + \"cooked/\" + id, id, {\n      headers: authHeader()\n    });\n  }\n\n  cancelOrder(id, order) {\n    return axios.put(API_URL + \"cancel/\" + id, order, {\n      headers: authHeader()\n    });\n  }\n\n  getManagerBoard() {\n    return axios.get(API_URL + 'manager', {\n      headers: authHeader()\n    });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', {\n      headers: authHeader()\n    });\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["E:/IntelliJ/Projects/Restaurant/Vietnamese_Restaurant/frontend/src/services/user.service.js"],"names":["axios","authHeader","API_URL","UserService","getPublicContent","get","getRequestRole","headers","getUserBoard","id","requestCancel","order","put","getWaiterBoard","servedOrder","getCashierBoard","paidOrder","getChefBoard","cookedOrder","cancelOrder","getManagerBoard","getAdminBoard"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:8082/api/test/';\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  getRequestRole(){\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getUserBoard(id) {\r\n    return axios.get(API_URL + 'orderByUser/' + id, { headers: authHeader() });\r\n  }\r\n\r\n  requestCancel(id, order){\r\n    return axios.put(API_URL + \"requestCancel/\" + id, order, { headers: authHeader() })\r\n  }\r\n\r\n  getWaiterBoard(){\r\n    return axios.get(API_URL + 'waiter', { headers: authHeader() });\r\n  }\r\n\r\n  servedOrder(id){\r\n    return axios.put(API_URL + \"served/\" + id, id, { headers: authHeader() })\r\n  }\r\n\r\n  getCashierBoard(){\r\n    return axios.get(API_URL + 'cashier', { headers: authHeader() });\r\n  }\r\n\r\n  paidOrder(id){\r\n    return axios.put(API_URL + \"paid/\" + id, id, { headers: authHeader() })\r\n  }\r\n\r\n  getChefBoard(){\r\n    return axios.get(API_URL + 'chef', { headers: authHeader() });\r\n  }\r\n\r\n  cookedOrder(id){\r\n    return axios.put(API_URL + \"cooked/\" + id, id, { headers: authHeader() })\r\n  }\r\n\r\n  cancelOrder(id, order){\r\n    return axios.put(API_URL + \"cancel/\" + id, order, { headers: authHeader() })\r\n  }\r\n\r\n  getManagerBoard() {\r\n    return axios.get(API_URL + 'manager', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n\r\n}\r\n\r\nexport default new UserService();\r\n"]},"metadata":{},"sourceType":"module"}